{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\60116\\\\Documents\\\\Naveen\\\\Me\\\\CAT 201\\\\CAT201 Project\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Footer, Navbar } from \"../components\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      fullName,\n      email,\n      password\n    };\n    const response = await fetch('/register', {\n      // URL to your servlet\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user) // Send the user data as JSON\n    });\n    const data = await response.json();\n    console.log(data.message); // Log success message or handle accordingly\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3 py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-4 h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-lg-4 col-sm-8 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"Name\",\n                placeholder: \"Enter Your Name\",\n                value: fullName,\n                onChange: e => setFullName(e.target.value) // Update state\n                ,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Email\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"Email\",\n                placeholder: \"name@example.com\",\n                value: email,\n                onChange: e => setEmail(e.target.value) // Update state\n                ,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form my-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"Password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value) // Update state\n                ,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Already has an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  className: \"text-decoration-underline text-info\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"my-2 mx-auto btn btn-dark\",\n                type: \"submit\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"6aAE8ed84hbC4gEoyMWjh/BaHTI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Footer","Navbar","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","fullName","setFullName","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","user","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/60116/Documents/Naveen/Me/CAT 201/CAT201 Project/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Footer, Navbar } from \"../components\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const user = { fullName, email, password };\r\n\r\n        const response = await fetch('/register', { // URL to your servlet\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(user), // Send the user data as JSON\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data.message); // Log success message or handle accordingly\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container my-3 py-3\">\r\n                <h1 className=\"text-center\">Register</h1>\r\n                <hr />\r\n                <div className=\"row my-4 h-100\">\r\n                    <div className=\"col-md-4 col-lg-4 col-sm-8 mx-auto\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form my-3\">\r\n                                <label htmlFor=\"Name\">Full Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"Name\"\r\n                                    placeholder=\"Enter Your Name\"\r\n                                    value={fullName}\r\n                                    onChange={(e) => setFullName(e.target.value)} // Update state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form my-3\">\r\n                                <label htmlFor=\"Email\">Email address</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    id=\"Email\"\r\n                                    placeholder=\"name@example.com\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)} // Update state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form my-3\">\r\n                                <label htmlFor=\"Password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"Password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)} // Update state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"my-3\">\r\n                                <p>Already has an account? <Link to=\"/login\" className=\"text-decoration-underline text-info\">Login</Link></p>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <button className=\"my-2 mx-auto btn btn-dark\" type=\"submit\">\r\n                                    Register\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,IAAI,GAAG;MAAET,QAAQ;MAAEE,KAAK;MAAEE;IAAS,CAAC;IAE1C,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAE;IAChC,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,oBACI1B,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACI3B,OAAA,CAACH,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/B,OAAA;MAAKgC,SAAS,EAAC,qBAAqB;MAAAL,QAAA,gBAChC3B,OAAA;QAAIgC,SAAS,EAAC,aAAa;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzC/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAL,QAAA,eAC3B3B,OAAA;UAAKgC,SAAS,EAAC,oCAAoC;UAAAL,QAAA,eAC/C3B,OAAA;YAAMiC,QAAQ,EAAEtB,YAAa;YAAAgB,QAAA,gBACzB3B,OAAA;cAAKgC,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtB3B,OAAA;gBAAOkC,OAAO,EAAC,MAAM;gBAAAP,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvC/B,OAAA;gBACImC,IAAI,EAAC,MAAM;gBACXH,SAAS,EAAC,cAAc;gBACxBI,EAAE,EAAC,MAAM;gBACTC,WAAW,EAAC,iBAAiB;gBAC7BC,KAAK,EAAEjC,QAAS;gBAChBkC,QAAQ,EAAG3B,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE,CAAC;gBAAA;gBAC9CG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/B,OAAA;cAAKgC,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtB3B,OAAA;gBAAOkC,OAAO,EAAC,OAAO;gBAAAP,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5C/B,OAAA;gBACImC,IAAI,EAAC,OAAO;gBACZH,SAAS,EAAC,cAAc;gBACxBI,EAAE,EAAC,OAAO;gBACVC,WAAW,EAAC,kBAAkB;gBAC9BC,KAAK,EAAE/B,KAAM;gBACbgC,QAAQ,EAAG3B,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE,CAAC;gBAAA;gBAC3CG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/B,OAAA;cAAKgC,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtB3B,OAAA;gBAAOkC,OAAO,EAAC,UAAU;gBAAAP,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1C/B,OAAA;gBACImC,IAAI,EAAC,UAAU;gBACfH,SAAS,EAAC,cAAc;gBACxBI,EAAE,EAAC,UAAU;gBACbC,WAAW,EAAC,UAAU;gBACtBC,KAAK,EAAE7B,QAAS;gBAChB8B,QAAQ,EAAG3B,CAAC,IAAKF,WAAW,CAACE,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE,CAAC;gBAAA;gBAC9CG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACN/B,OAAA;cAAKgC,SAAS,EAAC,MAAM;cAAAL,QAAA,eACjB3B,OAAA;gBAAA2B,QAAA,GAAG,0BAAwB,eAAA3B,OAAA,CAACF,IAAI;kBAAC4C,EAAE,EAAC,QAAQ;kBAACV,SAAS,EAAC,qCAAqC;kBAAAL,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5G,CAAC,eACN/B,OAAA;cAAKgC,SAAS,EAAC,aAAa;cAAAL,QAAA,eACxB3B,OAAA;gBAAQgC,SAAS,EAAC,2BAA2B;gBAACG,IAAI,EAAC,QAAQ;gBAAAR,QAAA,EAAC;cAE5D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN/B,OAAA,CAACJ,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAAA3B,EAAA,CAlFKD,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAoFd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}